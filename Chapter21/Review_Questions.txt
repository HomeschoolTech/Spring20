1. what are examples of useful STL algorithms?
accumulate(), copy(), find(),max_element(), count_if()
2. What does find() do? Give at least five examples.
finds an element in a container
from start to end 
from start to n
from n to end
in a vector
in an array
3. What does count_if() do?
returns the number of elements for which p is true
4. What does sort(b,e) use as its sorting criterion?
the < operator or a user defined cmp function
5. How does an STL algorithm take a container as an input argument?
by taking iterators to the range wanted
6. How does an STL algorithm take a container as an output argument?
an iterator to the first element
7. How does an STL algorithm usually indicate “not found” or “failure”?
by returning the end of the input sequence
8. What is a function object?
an object the behaves like a function
9. In which ways does a function object differ from a function?
it can be called as a predicae and can store a value
10. What is a predicate?
a input object that determines the functions action
11. What does accumulate() do?
adds the elements in a continer to some value
12. What does inner_product() do?
multiplies pairs in sequences and then sums the products
13. What is an associative container? Give at least three examples.
map, set, unoredered map
14. Is list an associative container? Why not?
no because it iterates in a line not a tree
15. What is the basic ordering property of binary tree?
key value
node left node right
16. What (roughly) does it mean for a tree to be balanced?
we only have to look a log2(N) instead of N/2 nodes
17. How much space per element does a map take up?
2 because they are in pairs
18. How much space per element does a vector take up?
1
19. Why would anyone use an unordered_map when an (ordered) map is available?
because it is faster to lookup elements 
20. How does a set differ from a map?
set doesn't contain values
21. How does a multimap differ from a map?
multiple elements can have equivalent keys
22. Why use a copy() algorithm when we could “just write a simple loop”?
because it is easier to read copy(x) then for(int i...
23. What is a binary search?
a search for a value in a sorted container where the iterator starts at the middle and moves left or right based on how
whether the value is larger or smaller then the middle value
